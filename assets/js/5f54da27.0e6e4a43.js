"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4037],{9028:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>d});var n=t(4848),r=t(8453);const i={id:"model_projection",title:"Projection"},c="Projection",s={id:"Model/Advanced Topics/model_projection",title:"Projection",description:"Consumers do not always want to return the entire contents of a record. In particular, for large records, returning the entirety of the record can increase the size of data transfer payloads and reduce overall performance if all of the data from a record is not needed. To support this behavior, many read operations allow for specification of a projection property. This projection property allows the consumer to limit the properties returned from the database resulting in reduced data traffic.",source:"@site/docs/04 - Model/07 - Advanced Topics/02 - Projection.md",sourceDirName:"04 - Model/07 - Advanced Topics",slug:"/Model/Advanced Topics/model_projection",permalink:"/mvom/docs/Model/Advanced Topics/model_projection",draft:!1,unlisted:!1,editUrl:"https://github.com/STORIS/mvom/tree/main/website/docs/04 - Model/07 - Advanced Topics/02 - Projection.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{id:"model_projection",title:"Projection"},sidebar:"docsSidebar",previous:{title:"The __v Property",permalink:"/mvom/docs/Model/Advanced Topics/model_version"},next:{title:"Schemaless Models",permalink:"/mvom/docs/Model/Advanced Topics/model_schemaless"}},a={},d=[{value:"Using Projection",id:"using-projection",level:2},{value:"Example",id:"example",level:3}];function l(e){const o={admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.h1,{id:"projection",children:"Projection"}),"\n",(0,n.jsxs)(o.p,{children:["Consumers do not always want to return the entire contents of a record. In particular, for large records, returning the entirety of the record can increase the size of data transfer payloads and reduce overall performance if all of the data from a record is not needed. To support this behavior, many read operations allow for specification of a ",(0,n.jsx)(o.code,{children:"projection"})," property. This ",(0,n.jsx)(o.code,{children:"projection"})," property allows the consumer to limit the properties returned from the database resulting in reduced data traffic."]}),"\n",(0,n.jsx)(o.admonition,{type:"warning",children:(0,n.jsxs)(o.p,{children:["It is highly advised to never save a ",(0,n.jsx)(o.code,{children:"Model"})," that is instantiated from a read operation using ",(0,n.jsx)(o.code,{children:"projection"}),". Unless you really know what you are doing, this could result in data loss as the ",(0,n.jsx)(o.code,{children:"Model"})," instance will not contain the data that was excluded from the projection."]})}),"\n",(0,n.jsx)(o.h2,{id:"using-projection",children:"Using Projection"}),"\n",(0,n.jsxs)(o.p,{children:["For operations which support projection, the behavior can be implemented by specifying the ",(0,n.jsx)(o.code,{children:"projection"})," property. The projection property is an array of strings which correspond to the defined schema property names."]}),"\n",(0,n.jsx)(o.admonition,{type:"info",children:(0,n.jsxs)(o.p,{children:["Any properties which are defined in the schema but are not indicated as a projected property will be assigned a value of ",(0,n.jsx)(o.code,{children:"null"}),". They will continue to exist on the ",(0,n.jsx)(o.code,{children:"Model"}),"."]})}),"\n",(0,n.jsx)(o.h3,{id:"example",children:"Example"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{className:"language-ts",children:"const schema = new Schema({\n  description: { type: 'string', path: 1, dictionary: 'DESCRIPTION' },\n  price: { type: 'number', path: 2, dbDecimals: 2, dictionary: 'PRICE' },\n});\n\nconst Item = connection.model(schema, 'ITEM');\n\nconst items = await Item.find({ price: { $gt: 100 } }, { projection: ['description'] });\nconsole.log(items[0].description); // outputs \"Racecar Bed\"\nconsole.log(items[0].price); // outputs null because price was not included in the projection\n"})})]})}function p(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,o,t)=>{t.d(o,{R:()=>c,x:()=>s});var n=t(6540);const r={},i=n.createContext(r);function c(e){const o=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function s(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),n.createElement(i.Provider,{value:o},e.children)}}}]);