"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8390],{4013:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>p,frontMatter:()=>t,metadata:()=>r,toc:()=>l});var i=o(4848),s=o(8453);const t={id:"model_user_defined_options",title:"User Defined Options"},d="User Defined Options",r={id:"Model/Advanced Topics/model_user_defined_options",title:"User Defined Options",description:"Many Model methods have an option property named userDefined available. As noted in the Detecting MVOM in Triggers section, MVOM is standalone but can potentially fire triggers upon writing. The userDefined object allows for passing values through to those trigger subroutines via the /S$MVOM/ named common area.",source:"@site/docs/04 - Model/07 - Advanced Topics/06 - User Defined Options.md",sourceDirName:"04 - Model/07 - Advanced Topics",slug:"/Model/Advanced Topics/model_user_defined_options",permalink:"/mvom/docs/Model/Advanced Topics/model_user_defined_options",draft:!1,unlisted:!1,editUrl:"https://github.com/STORIS/mvom/tree/main/website/docs/04 - Model/07 - Advanced Topics/06 - User Defined Options.md",tags:[],version:"current",sidebarPosition:6,frontMatter:{id:"model_user_defined_options",title:"User Defined Options"},sidebar:"docsSidebar",previous:{title:"Detecting MVOM in Triggers",permalink:"/mvom/docs/Model/Advanced Topics/model_detecting_mvom"},next:{title:"Request Log Tracing",permalink:"/mvom/docs/Model/Advanced Topics/model_request_log_tracing"}},c={},l=[];function a(e){const n={a:"a",code:"code",h1:"h1",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"user-defined-options",children:"User Defined Options"}),"\n",(0,i.jsxs)(n.p,{children:["Many ",(0,i.jsx)(n.code,{children:"Model"})," methods have an option property named ",(0,i.jsx)(n.code,{children:"userDefined"})," available. As noted in the ",(0,i.jsx)(n.a,{href:"model_detecting_mvom",children:"Detecting MVOM in Triggers"})," section, MVOM is standalone but can potentially fire triggers upon writing. The ",(0,i.jsx)(n.code,{children:"userDefined"})," object allows for passing values through to those trigger subroutines via the ",(0,i.jsx)(n.code,{children:"/S$MVOM/"})," named common area."]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.code,{children:"userDefined"})," property accepts an object with the following properties:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"option1"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"option2"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"option3"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"option4"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"option5"})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Each property is optional so you can specify as many or as few of them as you want. These values will be assigned to the ",(0,i.jsx)(n.code,{children:"/S$MVOM/"})," named common area as the second through sixth variables of the common block. If you wish to utilize these values in your trigger subroutines, you can declare your own ",(0,i.jsx)(n.code,{children:"/S$MVOM/"})," named common area:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"COM /S$MVOM/ S$MVOM.PROCESS\nCOM /S$MVOM/ S$MVOM.USER1, S$MVOM.USER2, S$MVOM.USER3, S$MVOM.USER4, S$MVOM.USER5\n"})}),"\n",(0,i.jsxs)(n.p,{children:["The value from ",(0,i.jsx)(n.code,{children:"option1"})," will be assigned to ",(0,i.jsx)(n.code,{children:"S$MVOM.USER1"}),", the value from ",(0,i.jsx)(n.code,{children:"option2"})," will be assigned to ",(0,i.jsx)(n.code,{children:"S$MVOM.USER2"}),", and so on."]}),"\n",(0,i.jsxs)(n.p,{children:["Related: ",(0,i.jsx)(n.a,{href:"model_detecting_mvom",children:"Detecting MVOM in Triggers"})]})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>d,x:()=>r});var i=o(6540);const s={},t=i.createContext(s);function d(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:d(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);