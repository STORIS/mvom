"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8939],{1508:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>d,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"Model/model_creation","title":"Creating a Model","description":"Model instances are typically created by consumers for the purpose of inserting a new record into the database.","source":"@site/docs/04 - Model/02 - Creating a Model.md","sourceDirName":"04 - Model","slug":"/Model/model_creation","permalink":"/mvom/docs/Model/model_creation","draft":false,"unlisted":false,"editUrl":"https://github.com/STORIS/mvom/tree/main/website/docs/04 - Model/02 - Creating a Model.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"model_creation","title":"Creating a Model"},"sidebar":"docsSidebar","previous":{"title":"Model Basics","permalink":"/mvom/docs/Model/model_basics"},"next":{"title":"Reading a Model By ID","permalink":"/mvom/docs/Model/model_reading_by_id"}}');var r=n(4848),s=n(8453);const d={id:"model_creation",title:"Creating a Model"},i="Creating a Model",c={},a=[{value:"Syntax",id:"syntax",level:2},{value:"Model Constructor Options Properties",id:"model-constructor-options-properties",level:3},{value:"Example",id:"example",level:2}];function l(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"creating-a-model",children:"Creating a Model"})}),"\n",(0,r.jsx)(t.p,{children:"Model instances are typically created by consumers for the purpose of inserting a new record into the database."}),"\n",(0,r.jsx)(t.h2,{id:"syntax",children:"Syntax"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"constructor(options: ModelConstructorOptions): Model\n"})}),"\n",(0,r.jsx)(t.h3,{id:"model-constructor-options-properties",children:"Model Constructor Options Properties"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Property"}),(0,r.jsx)(t.th,{children:"Type"}),(0,r.jsx)(t.th,{children:"Description"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"_id"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"string"})}),(0,r.jsx)(t.td,{children:"The identifier of the model. It will be the record ID upon saving."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"data"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"object"})}),(0,r.jsxs)(t.td,{children:["An object whose properties will be assigned into the Model instance.",(0,r.jsx)("br",{}),"Effectively, this allows for an easy mechanism to instantiate a new Model with the properties and values which should be assigned to it."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"__v"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"string"})}),(0,r.jsxs)(t.td,{children:["The version of the Model. See the ",(0,r.jsx)(t.a,{href:"./Advanced%20Topics/model_version",children:"__v Property"})," documentation for more information.",(0,r.jsx)("br",{})," It is uncommon for consumers to set this property."]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"record"})}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"string"})}),(0,r.jsxs)(t.td,{children:["An alternative way to supply data to a ",(0,r.jsx)(t.code,{children:"Model"})," instance. This property accepts a MultiValue delimited string (i.e. containing attribute marks, value marks) and will add properties to the model based upon the record's structure.",(0,r.jsx)("br",{}),"It is uncommon for consumers to set this property."]})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-ts",children:"const schema = new Schema({\n  description: { type: 'string', path: 1 },\n  price: { type: 'number', path: 2, dbDecimals: 2 },\n});\n\nconst Item = connection.model(schema, 'ITEM');\n\nconst item = new Item({ _id: '0001', data: { description: 'Racecar Bed', price: 999.99 } });\n\nconsole.log(item.description); // outputs \"Racecar Bed\"\n"})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>i});var o=n(6540);const r={},s=o.createContext(r);function d(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);