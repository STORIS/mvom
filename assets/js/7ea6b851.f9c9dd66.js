"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4830],{9669:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>d,contentTitle:()=>l,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>a});var t=n(4848),r=n(8453);const o={id:"model_query_multiple_operators",title:"Combining Multiple Operators"},l="Combining Multiple Operators",s={id:"Model/Querying/model_query_multiple_operators",title:"Combining Multiple Operators",description:"It is common to require specifying multiple query operators in order to filter results by multiple conditions. MVOM supports the ability to specify multiple operators in a variety of ways.",source:"@site/docs/04 - Model/06 - Querying/03 - Combining Multiple Operators.md",sourceDirName:"04 - Model/06 - Querying",slug:"/Model/Querying/model_query_multiple_operators",permalink:"/mvom/docs/Model/Querying/model_query_multiple_operators",draft:!1,unlisted:!1,editUrl:"https://github.com/STORIS/mvom/tree/main/website/docs/04 - Model/06 - Querying/03 - Combining Multiple Operators.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{id:"model_query_multiple_operators",title:"Combining Multiple Operators"},sidebar:"docsSidebar",previous:{title:"Query Conditional Operators",permalink:"/mvom/docs/Model/Querying/model_query_operators"},next:{title:"Pagination",permalink:"/mvom/docs/Model/Querying/model_query_pagination"}},d={},a=[{value:"And conditions",id:"and-conditions",level:2},{value:"Single property",id:"single-property",level:3},{value:"Example",id:"example",level:4},{value:"Explicit And for Multiple Properties",id:"explicit-and-for-multiple-properties",level:3},{value:"Example",id:"example-1",level:4},{value:"Implicit And for Multiple Properties",id:"implicit-and-for-multiple-properties",level:3},{value:"Or conditions",id:"or-conditions",level:2},{value:"Example",id:"example-2",level:3},{value:"Combining And and Or Conditions",id:"combining-and-and-or-conditions",level:2},{value:"Example",id:"example-3",level:3}];function c(e){const i={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h1,{id:"combining-multiple-operators",children:"Combining Multiple Operators"}),"\n",(0,t.jsx)(i.p,{children:"It is common to require specifying multiple query operators in order to filter results by multiple conditions. MVOM supports the ability to specify multiple operators in a variety of ways."}),"\n",(0,t.jsxs)(i.p,{children:["All examples on this page are working with a ",(0,t.jsx)(i.code,{children:"Model"})," constructed in the following manner:"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-ts",children:"const schema = new Schema({\n  description: { type: 'string', path: 1, dictionary: 'DESCRIPTION' },\n  price: { type: 'number', path: 2, dbDecimals: 2, dictionary: 'PRICE' },\n});\n\nconst Item = connection.model(schema, 'ITEM');\n"})}),"\n",(0,t.jsx)(i.h2,{id:"and-conditions",children:"And conditions"}),"\n",(0,t.jsxs)(i.p,{children:["There are multiple ways to join conditions via an ",(0,t.jsx)(i.code,{children:"and"})," operator using MVOM."]}),"\n",(0,t.jsx)(i.h3,{id:"single-property",children:"Single property"}),"\n",(0,t.jsxs)(i.p,{children:["If you have a single property which you wish to have multiple criteria joined by an ",(0,t.jsx)(i.code,{children:"and"}),", you can add each of those criteria to the same object value assigned to the property."]}),"\n",(0,t.jsx)(i.h4,{id:"example",children:"Example"}),"\n",(0,t.jsx)(i.p,{children:"The following query will return all records which have a price greater than or equal to 100 and less than 200."}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-ts",children:"const items = await Item.find({ price: { $gte: 100, $lt: 200 } });\n"})}),"\n",(0,t.jsx)(i.p,{children:"The query which will be executed on the MultiValue database is:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'select ITEM with (PRICE >= "100" and PRICE < "200")\n'})}),"\n",(0,t.jsx)(i.h3,{id:"explicit-and-for-multiple-properties",children:"Explicit And for Multiple Properties"}),"\n",(0,t.jsxs)(i.p,{children:["If you have multiple properties which you wish to have their conditions joined by an ",(0,t.jsx)(i.code,{children:"and"}),", you can use the ",(0,t.jsx)(i.code,{children:"$and"})," operator to join those conditions together. The ",(0,t.jsx)(i.code,{children:"$and"})," property accepts an array of query condition filter objects."]}),"\n",(0,t.jsx)(i.h4,{id:"example-1",children:"Example"}),"\n",(0,t.jsx)(i.p,{children:'The following query will return all records which have a description of "Bed" and a price greater than or equal to 100.'}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-ts",children:"const items = await Item.find({ $and: [{ description: 'Bed' }, { price: { $gte: 100 } }] });\n"})}),"\n",(0,t.jsx)(i.p,{children:"The query which will be executed on the MultiValue database is:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'select ITEM with (DESCRIPTION = "Bed" and PRICE >= "100")\n'})}),"\n",(0,t.jsx)(i.h3,{id:"implicit-and-for-multiple-properties",children:"Implicit And for Multiple Properties"}),"\n",(0,t.jsxs)(i.p,{children:["It is not necessary to use the explicit ",(0,t.jsx)(i.code,{children:"$and"})," operator if you have multiple properties that you wish to have their conditions joined by an ",(0,t.jsx)(i.code,{children:"and"}),". The ",(0,t.jsx)(i.code,{children:"$and"})," operator is implicit when multiple properties are specified in the query condition filter object."]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-ts",children:"const items = await Item.find({ description: 'Bed', price: { $gte: 100 } });\n"})}),"\n",(0,t.jsx)(i.p,{children:"The query which will be executed on the MultiValue database is:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'select ITEM with (DESCRIPTION = "Bed" and PRICE >= "100")\n'})}),"\n",(0,t.jsx)(i.h2,{id:"or-conditions",children:"Or conditions"}),"\n",(0,t.jsxs)(i.p,{children:["In order to join conditions via an ",(0,t.jsx)(i.code,{children:"or"})," operator, you would use the ",(0,t.jsx)(i.code,{children:"$or"})," operator to join those conditions together. The ",(0,t.jsx)(i.code,{children:"$or"})," property accepts an array of query condition filter objects."]}),"\n",(0,t.jsx)(i.h3,{id:"example-2",children:"Example"}),"\n",(0,t.jsx)(i.p,{children:"The following query will return all records which have a price less than 100 or greater than or equal to 1000."}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-ts",children:"const items = await Item.find({ $or: [{ price: { $lt: 100 } }, { price: { $gte: 1000 } }] });\n"})}),"\n",(0,t.jsx)(i.p,{children:"The query which will be executed on the MultiValue database is:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'select ITEM with (PRICE < 100 or PRICE >= "1000")\n'})}),"\n",(0,t.jsx)(i.h2,{id:"combining-and-and-or-conditions",children:"Combining And and Or Conditions"}),"\n",(0,t.jsx)(i.p,{children:"It is possible to combine And and Or conditions into the same query. This is done by simply nesting these join operators within each other to produce more complex queries."}),"\n",(0,t.jsx)(i.h3,{id:"example-3",children:"Example"}),"\n",(0,t.jsx)(i.p,{children:'The following query will return all records which have a description of "Bed" and a price that is less than 100 or greater than or equal to 1000.'}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-ts",children:"const items = await Item.find({\n  $and: [{ description: 'Bed' }, { $or: [{ price: { $lt: 100 } }, { price: { $gte: 1000 } }] }],\n});\n"})}),"\n",(0,t.jsx)(i.p,{children:"The query which will be executed on the MultiValue database is:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'select ITEM with (DESCRIPTION = "Bed" and (PRICE < "100" or PRICE >= "1000"))\n'})})]})}function p(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>l,x:()=>s});var t=n(6540);const r={},o=t.createContext(r);function l(e){const i=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),t.createElement(o.Provider,{value:i},e.children)}}}]);