"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7508],{5457:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>o,frontMatter:()=>d,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"Schema/Scalar Schema Types/schema_type_isotime","title":"ISOTime","description":"The ISOTime schema type allow you to work with time values.","source":"@site/docs/03 - Schema/02 - Scalar Schema Types/05 - ISOTime.md","sourceDirName":"03 - Schema/02 - Scalar Schema Types","slug":"/Schema/Scalar Schema Types/schema_type_isotime","permalink":"/mvom/docs/Schema/Scalar Schema Types/schema_type_isotime","draft":false,"unlisted":false,"editUrl":"https://github.com/STORIS/mvom/tree/main/website/docs/03 - Schema/02 - Scalar Schema Types/05 - ISOTime.md","tags":[],"version":"current","sidebarPosition":5,"frontMatter":{"id":"schema_type_isotime","title":"ISOTime"},"sidebar":"docsSidebar","previous":{"title":"ISOCalendarDate","permalink":"/mvom/docs/Schema/Scalar Schema Types/schema_type_isocalendardate"},"next":{"title":"ISOCalendarDateTime","permalink":"/mvom/docs/Schema/Scalar Schema Types/schema_type_isocalendardatetime"}}');var n=s(4848),r=s(8453);const d={id:"schema_type_isotime",title:"ISOTime"},c="ISOTime Schema Type",a={},l=[{value:"Schema Definition Properties",id:"schema-definition-properties",level:2},{value:"Formatting",id:"formatting",level:2},{value:"dbFormat = &quot;s&quot;",id:"dbformat--s",level:3},{value:"dbFormat = &quot;ms&quot;",id:"dbformat--ms",level:3},{value:"Example",id:"example",level:2}];function h(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"isotime-schema-type",children:"ISOTime Schema Type"})}),"\n",(0,n.jsx)(t.p,{children:"The ISOTime schema type allow you to work with time values."}),"\n",(0,n.jsx)(t.h2,{id:"schema-definition-properties",children:"Schema Definition Properties"}),"\n",(0,n.jsxs)(t.p,{children:["In addition to the ",(0,n.jsx)(t.a,{href:"../schema_basics#properties-common-to-all-schema-definition-types",children:"base schema definition properties"})," the ",(0,n.jsx)(t.code,{children:"ISOTime"})," type has the following additional properties:"]}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Property"}),(0,n.jsx)(t.th,{children:"Type"}),(0,n.jsx)(t.th,{style:{textAlign:"center"},children:"Mandatory"}),(0,n.jsx)(t.th,{children:"Default"}),(0,n.jsx)(t.th,{children:"Description"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"type"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"ISOTime"'})}),(0,n.jsx)(t.td,{style:{textAlign:"center"},children:"\u2714\ufe0f"}),(0,n.jsx)(t.td,{}),(0,n.jsx)(t.td,{children:"The type literal for an ISOTime schema type"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"dbFormat"})}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.code,{children:'"s"'})," | ",(0,n.jsx)(t.code,{children:'"ms"'})]}),(0,n.jsx)(t.td,{style:{textAlign:"center"}}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"s"'})}),(0,n.jsxs)(t.td,{children:[(0,n.jsx)(t.code,{children:'"s"'})," denotes internal time is in seconds",(0,n.jsx)("br",{}),(0,n.jsx)(t.code,{children:'"ms"'})," denotes internal time is in milliseconds"]})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"formatting",children:"Formatting"}),"\n",(0,n.jsxs)(t.p,{children:["An ISOTime schema type will be transformed to and from MultiValue internal time representation to ISO 8601 times (",(0,n.jsx)(t.code,{children:"HH:MM:SS.SSS"}),"). The transformations are conditional based upon the ",(0,n.jsx)(t.code,{children:"dbFormat"})," property value."]}),"\n",(0,n.jsx)(t.h3,{id:"dbformat--s",children:'dbFormat = "s"'}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Database Value"}),(0,n.jsx)(t.th,{children:"JavaScript Value"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"0"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"00:00:00.000"'})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"43200"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"12:00:00.000"'})})]})]})]}),"\n",(0,n.jsx)(t.h3,{id:"dbformat--ms",children:'dbFormat = "ms"'}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Database Value"}),(0,n.jsx)(t.th,{children:"JavaScript Value"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"0"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"00:00:00.000"'})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:"43200123"})}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.code,{children:'"12:00:00.123"'})})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"example",children:"Example"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"const schemaDefinition = {\n  timeProperty: {\n    type: 'ISOTime',\n    path: 1,\n    dictionary: 'TIME_DICT',\n    required: true,\n    dbFormat: 's',\n  },\n};\n\nconst schema = new Schema(schemaDefinition);\n"})})]})}function o(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>d,x:()=>c});var i=s(6540);const n={},r=i.createContext(n);function d(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);