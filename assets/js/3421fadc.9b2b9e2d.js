"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[269],{3905:function(e,t,a){a.d(t,{Zo:function(){return m},kt:function(){return u}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var c=n.createContext({}),p=function(e){var t=n.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),s=p(a),u=r,h=s["".concat(c,".").concat(u)]||s[u]||d[u]||l;return a?n.createElement(h,i(i({ref:t},m),{},{components:a})):n.createElement(h,i({ref:t},m))}));function u(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=a.length,i=new Array(l);i[0]=s;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}s.displayName="MDXCreateElement"},8949:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return c},default:function(){return u},frontMatter:function(){return o},metadata:function(){return p},toc:function(){return d}});var n=a(7462),r=a(3366),l=(a(7294),a(3905)),i=["components"],o={id:"schema_type_isocalendardate",title:"ISOCalendarDate"},c="ISOCalendarDate Schema Type",p={unversionedId:"Schema/Scalar Schema Types/schema_type_isocalendardate",id:"Schema/Scalar Schema Types/schema_type_isocalendardate",title:"ISOCalendarDate",description:"The ISOCalendarDate schema type allow you to work with date values.",source:"@site/docs/03 - Schema/02 - Scalar Schema Types/04 - ISOCalendarDate.md",sourceDirName:"03 - Schema/02 - Scalar Schema Types",slug:"/Schema/Scalar Schema Types/schema_type_isocalendardate",permalink:"/mvom/docs/Schema/Scalar Schema Types/schema_type_isocalendardate",draft:!1,editUrl:"https://github.com/STORIS/mvom/tree/main/website/docs/03 - Schema/02 - Scalar Schema Types/04 - ISOCalendarDate.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"schema_type_isocalendardate",title:"ISOCalendarDate"},sidebar:"docsSidebar",previous:{title:"Number",permalink:"/mvom/docs/Schema/Scalar Schema Types/schema_type_number"},next:{title:"ISOTime",permalink:"/mvom/docs/Schema/Scalar Schema Types/schema_type_isotime"}},m={},d=[{value:"Schema Definition Properties",id:"schema-definition-properties",level:2},{value:"Formatting",id:"formatting",level:2},{value:"Example",id:"example",level:2}],s={toc:d};function u(e){var t=e.components,a=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,n.Z)({},s,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"isocalendardate-schema-type"},"ISOCalendarDate Schema Type"),(0,l.kt)("p",null,"The ISOCalendarDate schema type allow you to work with date values."),(0,l.kt)("h2",{id:"schema-definition-properties"},"Schema Definition Properties"),(0,l.kt)("p",null,"In addition to the ",(0,l.kt)("a",{parentName:"p",href:"../schema_basics#properties-common-to-all-schema-definitions"},"base schema definition properties")," the ",(0,l.kt)("inlineCode",{parentName:"p"},"ISOCalendarDate")," type has the following additional properties:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Property"),(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:"center"},"Mandatory"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"type")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"ISOCalendarDate"')),(0,l.kt)("td",{parentName:"tr",align:"center"},"\u2714\ufe0f"),(0,l.kt)("td",{parentName:"tr",align:null}),(0,l.kt)("td",{parentName:"tr",align:null},"The type literal for an ISOCalendarDate schema type")))),(0,l.kt)("h2",{id:"formatting"},"Formatting"),(0,l.kt)("p",null,"An ISOCalendarDate schema type will be transformed to and from MultiValue internal date representation to ISO 8601 dates (",(0,l.kt)("inlineCode",{parentName:"p"},"YYYY-MM-DD"),"):"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Database Value"),(0,l.kt)("th",{parentName:"tr",align:null},"JavaScript Value"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"0")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"1967-12-31"'))),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"19864")),(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},'"2022-05-20"'))))),(0,l.kt)("h2",{id:"example"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const schemaDefinition = {\n  dateProperty: {\n    type: 'ISOCalendarDate',\n    path: 1,\n    dictionary: 'DATE_DICT',\n    required: true,\n  },\n};\n\nconst schema = new Schema(schemaDefinition);\n")))}u.isMDXComponent=!0}}]);